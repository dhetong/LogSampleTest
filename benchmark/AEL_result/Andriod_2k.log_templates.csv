EventId,EventTemplate,Occurrences
cdb1c0b0,"printFreezingDisplayLogsopening app wtoken = AppWindowToken{<*> token=Token{<*> ActivityRecord{<*> u0 <*>/.<*> t761}}}, allDrawn= false, startingDisplayed =  false, startingMoved =  false, isRelaunching =  false",1
60843176,"acquire lock=<*>, flags=<*>, tag=""View Lock"", name=<*>, ws=null, uid=<*>, pid=<*>",1
1fa059f9,"ready=true,policy=<*>,wakefulness=<*>,wksummary=<*>,uasummary=<*>,bootcompleted=true,boostinprogress=false,waitmodeenable=false,mode=false,manual=<*>,auto=-<*>,adj=<*>.0userId=<*>",199
d83c4784,Skipping AppWindowToken{<*> token=Token{<*> ActivityRecord{<*> u0 <*><*>.<*> t761}}} -- going to hide,2
ae0e6d6d,visible is <*>,3
168e62e2,mVisiblity.getValue is false,5
9042ff8a,visible is <*> gt <*>,2
e04f28a2,"release:lock=<*>, flg=<*>, tag=""View Lock"", name=<*>"", ws=null, uid=<*>, pid=<*>",1
b85a2108,"updateClipping <*> getTopPadding=<*>.<*>, <*>",65
d6169692,updateDimmedActivatedHideSensitive <*>,65
7bf44fc6,getRunningAppProcesses: caller <*> does not hold REAL_GET_TASKS; limiting output,81
eb70a884,"release:lock=<*>, flg=<*>, tag=""*launch*"", name=android"", ws=WorkSource{<*>}, uid=<*>, pid=<*>",8
7220246f,"setSystemUiVisibility vis=<*> mask=<*> oldVal=<*> newVal=<*> diff=<*> fullscreenStackVis=<*> dockedStackVis=<*>, fullscreenStackBounds=Rect(<*>, <*> - <*>, <*>), dockedStackBounds=Rect(<*>, <*> - <*>, <*>)",200
3c2ee2af,cancelAutohide,15
e770cf57,"notifyUiVisibilityChanged:vis=<*>, SystemUiVisibility=<*>",19
75c3413d,Destroying surface Surface(name=SurfaceView - <*><*>.<*>) called by <*>:<*> <*>:<*> <*>:<*> <*>$Stub.onTransact:<*> <*>:<*> <*>:<*> <bottom of call stack> <bottom of call stack>,1
45e5d1fb,Destroying surface Surface(name=<*><*>.<*>) called by <*>:<*> <*>:<*> <*>:<*> <*>:<*> <*>:<*> <*>:<*> <*>$Stub.onTransact:<*> <*>:<*>,1
158aa667,"release:lock=<*>, flg=<*>, tag=""WindowManager"", name=android"", ws=WorkSource{<*>}, uid=<*>, pid=<*>",1
e9aa76e5,"userActivityNoUpdateLocked: eventTime=<*>, event=<*>, flags=<*>, uid=<*>",69
748b2271,"orientation change is complete, call stopFreezingDisplayLocked",1
d3d08bbe,Screen frozen for +1s0ms due to Window{<*> u0 <*><*>.<*>},1
fc3ab7b2,startAnimation <*>,2
5d951d08,"release:lock=<*>, flg=<*>, tag=""SCREEN_FROZEN"", name=android"", ws=null, uid=<*>, pid=<*>",1
d8d19c23,remove(PendingIntent{<*>: PendingIntentRecord{<*> <*> broadcastIntent}}) changed bounds; rebatching,2
723d665e,<*> last=<*>); user=<*> USER_ROTATION_LOCKED,3
e9fc9238,"Application requested orientation <*>, got rotation <*> which has compatible metrics",2
3fd5f864,"acquire lock=<*>, flags=<*>, tag=""RILJ_ACK_WL"", name=<*>, ws=null, uid=<*>, pid=<*>",10
78791997,shouldBlockLocation running ...,37
37b6a779,shouldBlockLocation <*>,37
c22c4fc5,getNeighboringCellInfo calling app is <*>,5
017a9c5d,"release:lock=<*>, flg=<*>, tag=""RILJ_ACK_WL"", name=<*>"", ws=null, uid=<*>, pid=<*>",7
8b8a7e54,"release:lock=<*>, flg=<*>, tag=""AudioMix"", name=audioserver"", ws=null, uid=<*>, pid=<*>",6
82d30237,"<*> suspend blocker ""PowerManagerService.WakeLocks"".",66
7d72c8fc,HBM <*> =<*>,170
1b7a0525,"Animating brightness: target=<*>, rate=<*>",85
482e1e93,suspendAutohide,23
3d070835,interceptKeyTq keycode=<*> interactive=true keyguardActive=false policyFlags=<*> down true canceled false,7
4f0e8a73,"interceptKeyBeforeQueueing: key <*> , result : <*>",14
8d7445f8,resumeSuspendedAutohide,10
d6393769,interceptKeyTq keycode=<*> interactive=true keyguardActive=false policyFlags=<*> down false canceled false,7
eeec1449,querySoundEffectsEnabled...,17
59a2770d,"acquire lock=<*>, flags=<*>, tag=""*launch*"", name=android, ws=WorkSource{<*>}, uid=<*>, pid=<*>",8
f7f435eb,Skipping AppWindowToken{<*> token=Token{<*> ActivityRecord{<*> u0 <*>/.<*> t761}}} -- going to hide,2
a281eae7,Bad activity token: <*>@<*>,1
c939954f,<*>: <*> cannot be cast to <*>$Token,1
39397668,"onTouchEvent::<*>, x=<*>.<*>, y=<*>.<*>",2
ade15b9a,schedulePeek,1
33c7b245,getRingtonePlayer...,2
597cb21f,disable: < expand ICONS* alerts SYSTEM_INFO* back home recent clock navigationbar search quick_settings >,3
f1682f2e,"updateLightsLocked,mInCall =false,mScreenOn = true,ledNotification == null?true",4
942f09c2,"updateLightsLocked,turn off notificationLight",6
4ca0ad07,"overlapAmount:<*>.<*>, previousNotificationEnd:<*>.<*>, newYTranslation:-<*>.<*>, location:<*>, i:<*>, getTopPadding:<*>.<*>, getLocationOnScreen():-<*>",13
d2c08d33,<*> i:<*>,13
f02115d0,onExpandingStarted,2
cd7563b4,onTrackingStarted,1
9f6a0286,Destroying surface Surface(name=<*><*>.<*>) called by <*>:<*> <*>:<*> <*>:<*> <*>:<*> <*>:<*> <*>:<*> <*>:<*> <*>:<*>,6
522cc439,cancelPeek: false,20
a3c99ab3,"flingToHeight: vel=<*>.<*>, expand=true, target=<*>.<*>, collapseSpeedUpFactor=<*>.<*>, expandBecauseOfFalsing=false",1
263f405d,onTrackingStopped: true,1
b5721111,onExpandingFinished,2
f69486aa,Sending non-protected broadcast <*> from system <*>:<*><*> pkg <*>,2
8cf89ab7,logNotificationVisibilityChanges runInThread <*>,12
1bd8dab1,<*> called,10
6ed37c98,isSimPinSecure mSimDatas is null or empty,1
2f983de0,registerCallback not in UI.,3
f2db1c93,<*>: Must execute in UI,3
171261c2,*** register callback for <*>@<*>,1
3ad5a38d,*** unregister callback for null,1
23051d9f,[PhoneIntfMgr] getDataEnabled: subId=<*> <*>,2
6d67725e,"onInterceptTouchEvent MotionEvent { action=ACTION_DOWN, actionButton=<*>, id[<*>]=<*>, x[<*>]=<*>.<*>, y[<*>]=<*>.<*>, toolType[<*>]=TOOL_TYPE_FINGER, buttonState=<*>, metaState=<*>, flags=<*>, edgeFlags=<*>, pointerCount=<*>, historySize=<*>, eventTime=<*>, downTime=<*>, deviceId=<*>, source=<*> }, mBlockTouches=false",2
bea96f2e,"onInterceptTouchEvent MotionEvent { action=ACTION_UP, actionButton=<*>, id[<*>]=<*>, x[<*>]=<*>.<*>, y[<*>]=<*>.<*>, toolType[<*>]=TOOL_TYPE_FINGER, buttonState=<*>, metaState=<*>, flags=<*>, edgeFlags=<*>, pointerCount=<*>, historySize=<*>, eventTime=<*>, downTime=<*>, deviceId=<*>, source=<*> }, mBlockTouches=false",2
6d2b2a3b,playSoundEffect   effectType: <*>,10
2f355ac4,"animateCollapsePanels:flags=<*>, <*> <*> mExpandedVisible=true",3
f285eef7,START u0 {act=<*> flg=<*> cmp=<*>/.activity.SplashActivity (has extras)} from uid <*> on display <*>,1
554165dd,"ActivityRecord info: ActivityInfo{<*> <*>}, euid: <*>",4
ef908799,"cancelNotification,index:<*>",3
beda30e4,"cancelNotification,cancelNotificationLocked,callingUid = <*>,callingPid = <*>",2
8a999a7a,"cancelNotificationLocked called,tell the app,reason = <*>",2
6ffb32a1,cancelNotificationLocked:<*>|<*>|<*>|null|<*>,2
14be3b8a,"cancelNotificationLocked,remove =<*>",2
236d8210,applyOptionsLocked: Unknown animationType=<*>,2
6190fc83,"flingToHeight: vel=<*>.<*>, expand=false, target=<*>.<*>, collapseSpeedUpFactor=<*>.<*>, expandBecauseOfFalsing=false",1
9c3cf8da,"Taking screenshot from Surface with crop:[Rect(<*>, <*> - <*>, <*>)], width:[<*>], height:[<*>], minLayer:[<*>], maxLayer:[<*>], inRotation:[false], rot:[<*>]",4
cf257422,removeNotification:<*>|<*>|<*>|null|<*>,2
d94e53a6,"updateNotificationShade: total=<*>, active=<*>",13
d086f104,The change in focus caused us to need to do a layout begin,6
681e150e,The change in focus caused us to need to do a layout end,6
b4f3261c,setLightsOn(true),181
99e75217,removeNotificationChildren,12
155ec9bd,"Skipping, withExcluded: false, tr.intent:Intent { flg=<*> cmp=<*>/.recents.RecentsActivity bnds=[<*>,<*>][<*>,<*>] }",14
9cfaf732,"Skipping, withExcluded: false, tr.intent:Intent { act=<*> flg=<*> cmp=<*>/.InCallActivity (has extras) }",14
39e514cc,"Skipping, withExcluded: false, tr.intent:Intent { flg=<*> cmp=<*>/.<*> (has extras) }",21
d29029f9,"Skipping, withExcluded: false, tr.intent:Intent { act=<*> dat=tel:xxxxxxxxxxx flg=<*> cmp=<*>/.ChooseSubActivity (has extras) }",7
218a1bef,"Skipping, withExcluded: false, tr.intent:Intent { act=<*> dat=file://<*>.apk typ=application<*>.android.package-archive flg=<*> cmp=<*>/.PackageInstallerActivity (has extras) }",7
de9aca52,getRecentTasks: <*>,28
6b5c361a,"cancelNotificationWithTag pid <*>,uid = <*>,tag = null,pkg =<*>,id =<*>",20
31252fc1,"cancelNotification,index:-<*>",20
e075ddbf,makeExpandedInvisible: <*>,4
fbb3c9bb,closeQs,12
18084d2f,instantCollapse,9
d0941149,disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings >,3
72c1c362,*** unregister callback for <*>@<*>,1
fc6b3dda,getTasks: caller <*> does not hold REAL_GET_TASKS; limiting output,37
a6b9ef39,isMusicActive...,12
041ebeaa,"Start dump, calling from : pid=<*>, uid=<*>",1
194d6f22,"acquire lock=<*>, flags=<*>, tag=""WiredAccessoryManager"", name=android, ws=null, uid=<*>, pid=<*>",1
32ad5b69,setWiredDeviceConnectionState  type: -<*>  state: <*>,1
5287abea,"acquire lock=<*>, flags=<*>, tag=""handleAudioEvent"", name=android, ws=null, uid=<*>, pid=<*>",1
83fa3912,setWiredDeviceConnectionState  type: <*>  state: <*>,1
a5683e33,"release:lock=<*>, flg=<*>, tag=""WiredAccessoryManager"", name=android"", ws=null, uid=<*>, pid=<*>",1
7e911563,"ActivityManagerService,attachApplication,callingPid = <*>",4
931fb961,"acquire lock=<*>, flags=<*>, tag=""AudioMix"", name=audioserver, ws=null, uid=<*>, pid=<*>",5
fe8cfb9c,"release:lock=<*>, flg=<*>, tag=""handleAudioEvent"", name=android"", ws=null, uid=<*>, pid=<*>",1
219ced65,isBluetoothA2dpOn...,1
ce34163a,isBluetoothScoOn...,1
65a273d5,getLastAudibleStreamVolume  treamType: <*>,9
27f49d3b,getDevicesForStream  streamType: <*>,2
369d5eff,cleanUpApplicationRecord -- <*>,6
71d4237b,"cleanUpApplicationRecordLocked, pid: <*>, restart: false",6
f4cc530d,"cleanUpApplicationRecordLocked, reset pid: <*>, euid: <*>",6
cb8e09e6,stopWifiDisplayScanLocked <*>,12
eadc277d,getMode...,1
29a82dae,setSpeakerphoneOn  on: true,1
f9bf5b1a,setSpeakerphoneOn on:true,1
982cb22c,"sending alarm Alarm{<*> type <*> when <*> PendingIntent{<*>: PendingIntentRecord{<*> android broadcastIntent}}},repeatInterval = <*>,listenerTag =time_tick",3
b0fb9415,Received TIME_TICK alarm; rescheduling,3
215c579a,scheduleTimeTickEvent triggerAtTime = <*>,3
7233f052,received broadcast <*>,4
3e03b5e1,handleTimeUpdate,3
9a88a796,Destroying surface Surface(name=PopupWindow:<*>) called by <*>:<*> <*>:<*> <*>:<*> <*>:<*> <*>:<*> <*>:<*> <*>:<*> <*>:<*>,14
ddb98ebe,"sending alarm Alarm{<*> type <*> when <*> PendingIntent{<*>: PendingIntentRecord{<*> <*> broadcastIntent}}},repeatInterval = <*>,listenerTag =null",2
9cff5102,Killing <*>:<*><*> (adj <*>): empty for 1810s,1
bce029b5,Unable to start service Intent { act=<*> cmp=<*><*>.<*> } U=<*>: not found,1
13d3f523,unregisterAudioFocusListener...,1
504c331a,abandonAudioFocus,1
a4e9f81f,"[HSM] stayAwake false uid: <*>, pid: <*>",1
61648887,Pid:<*> MediaPlayer destructor,1
de82508a,Process <*>:qzone (pid <*>) has died,1
d8cb5b06,Scheduling restart of crashed service <*><*>.<*> in 1000ms,1
63f8cbc4,"new Process app=ProcessRecord{<*> <*>:<*>:qzone<*>}, name: <*>:qzone, euid: <*>",1
ecd85d6d,Start proc <*>:<*>:qzone<*> for service <*><*>.<*>,1
430b8761,Destroying surface Surface(name=InputMethod) called by <*>:<*> <*>:<*> <*>:<*> <*>:<*> <*>:<*> <*>:<*> <*>$H.handleMessage:<*> <*>:<*>,3
6d6ce631,"animateCollapsePanels:flags=<*>, force=false, delayed=false, mExpandedVisible=false",5
ddafabaa,enqueueNotificationInternal: pkg=<*> id=<*> notification=Notification(pri=<*> contentView=null vibrate=[<*>] sound=null tick defaults=<*> flags=<*> color=<*> vis=PRIVATE),1
a69523ee,enqueueNotificationInternal: n.getKey = <*>|<*>|<*>|null|<*>,2
99718fbd,getRingerMode...,3
d7d44c4d,"updateLightsLocked,mInCall =false,mScreenOn = true,ledNotification == null?false",2
7fdc600b,addNotification key=<*>|<*>|<*>|null|<*>,2
3a97dc6f,mHeadsUpExistenceChangedRunnable,4
6b9c00bb,Marking notification as seen <*>|<*>|<*>|null|<*>,2
67373c7b,"START u0 {act=<*> cat=[<*>] flg=<*> cmp=<*>/.NotePadActivity bnds=[<*>,<*>][<*>,<*>]} from uid <*> on display <*>",1
5c10bbdf,"Application requested orientation -<*>, got rotation <*> which has compatible metrics",1
b7a7efca,"ACTIVITY check resid: <*>, size=<*>",2
5a5bc5a1,"START u0 {act=<*> cat=[<*>] flg=<*> cmp=<*>/.activity.SplashActivity bnds=[<*>,<*>][<*>,<*>]} from uid <*> on display <*>",1
0a050854,getAllCellInfo is blocked by permission manager . callingPackage = <*>,3
96658704,getCellLocation is blocked by permission manager uid:<*> pid:<*>,1
d639dd08,isWiredHeadsetOn...,1
0c87ac07,"setDataSource(<*>, <*>, <*>)",1
518b31a4,getStreamVolume  treamType: <*>,1
b2a3188b,"updateIsPoweredLocked: wasPowered=false, mIsPowered=false, oldPlugType=<*>, mPlugType=<*>, mBatteryLevel=<*>",1
f1cf316c,ACTION_BATTERY_CHANGED AMP: <*>; Volt: <*>,1
f9e8e96e,updateChargingLocked: charging=false,1
f2b17d58,"onReceive, action:<*>",1
5185f06d,ACTION_BATTERY_CHANGED pluggedType: <*>,1
0f8708e2,<*> what=<*>,2
f360e1f9,battery changed pluggedType: <*>,1
1d75714a,RefreshBatteryInfo isBatteryLow: <*>,2
23fd409e,ChargingSpeed  Wattage: -<*> ST: <*> --> <*>,1
e23c2601,handleBatteryUpdate,1
ab275bc5,enqueueNotificationInternal: pkg=<*> id=<*> notification=Notification(pri=<*> contentView=null vibrate=[] sound=null tick defaults=<*> flags=<*> color=<*> category=msg vis=PRIVATE),1
4b47cac8,START u0 {flg=<*> cmp=<*>/.ui.LauncherUI (has extras)} from uid <*> on display <*>,1
2e531110,startActivity called from non-Activity context; forcing Intent.FLAG_ACTIVITY_NEW_TASK for: Intent { flg=<*> cmp=<*>/.ui.LauncherUI (has extras) },1
